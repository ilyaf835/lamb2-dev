services:
  web:
    image: web
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: lamb
      POSTGRES_DB: lamb
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      RABBITMQ_HOST: rabbitmq
      REDIS_HOST: redis
      SECRET_FILE: /run/secrets/app_secret
    networks:
      - appnet
    secrets:
      - app_secret
      - postgres_password
    deploy:
      restart_policy:
        condition: none
    init: true
    stop_signal: SIGINT
    command: ["sanic", "server:app", "--host", "0.0.0.0", "--port", "8080",
              "--no-access-logs", "--fast"]

  balancer:
    image: balancer
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: lamb
      POSTGRES_DB: lamb
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      RABBITMQ_HOST: rabbitmq
      REDIS_HOST: redis
    networks:
      - appnet
    secrets:
      - postgres_password
    deploy:
      restart_policy:
        condition: none
    init: true
    stop_signal: SIGINT
    command: ["python", "balancer.py", "--workers", "1", "--instances", "2"]

networks:
  appnet:
    external: true

secrets:
  app_secret:
    external: true
  postgres_password:
    external: true
